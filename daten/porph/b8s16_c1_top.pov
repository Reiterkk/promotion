// 
// Molecular graphics export from VMD 1.9.1
// http://www.ks.uiuc.edu/Research/vmd/
// Requires POV-Ray 3.5 or later
// 
// POV 3.x input script : E:/Users/Kevin Reiter/Documents/GitHub/promotion/daten/porph/b8s16_c1_top.pov 
// try povray +W1920 +H1057 -IE:/Users/Kevin Reiter/Documents/GitHub/promotion/daten/porph/b8s16_c1_top.pov -OE:/Users/Kevin Reiter/Documents/GitHub/promotion/daten/porph/b8s16_c1_top.pov.tga +P +X +A +FT +C
#if (version < 3.5) 
#error "VMD POV3DisplayDevice has been compiled for POV-Ray 3.5 or above.\nPlease upgrade POV-Ray or recompile VMD."
#end 
#declare VMD_clip_on=array[3] {0, 0, 0};
#declare VMD_clip=array[3];
#declare VMD_scaledclip=array[3];
#declare VMD_line_width=0.0020;
#macro VMDC ( C1 )
  texture { pigment { rgbt C1 }}
#end
#macro VMD_point (P1, R1, C1)
  #local T = texture { finish { ambient 1.0 diffuse 0.0 phong 0.0 specular 0.0 } pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_line (P1, P2, C1)
  #local T = texture { finish { ambient 1.0 diffuse 0.0 phong 0.0 specular 0.0 } pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cylinder {P1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cylinder {P1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_sphere (P1, R1, C1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_cylinder (P1, P2, R1, C1, O1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cylinder {P1, P2, R1 #if(O1) open #end texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cylinder {P1, P2, R1 #if(O1) open #end texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_cone (P1, P2, R1, C1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cone {P1, R1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cone {P1, R1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_triangle (P1, P2, P3, N1, N2, N3, C1)
  #local T = texture { pigment { C1 } }
  smooth_triangle {P1, N1, P2, N2, P3, N3 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
#end
#macro VMD_tricolor (P1, P2, P3, N1, N2, N3, C1, C2, C3)
  #local NX = P2-P1;
  #local NY = P3-P1;
  #local NZ = vcross(NX, NY);
  #local T = texture { pigment {
    average pigment_map {
      [1 gradient x color_map {[0 rgb 0] [1 C2*3]}]
      [1 gradient y color_map {[0 rgb 0] [1 C3*3]}]
      [1 gradient z color_map {[0 rgb 0] [1 C1*3]}]
    }
    matrix <1.01,0,1,0,1.01,1,0,0,1,-.002,-.002,-1>
    matrix <NX.x,NX.y,NX.z,NY.x,NY.y,NY.z,NZ.x,NZ.y,NZ.z,P1.x,P1.y,P1.z>
  } }
  smooth_triangle {P1, N1, P2, N2, P3, N3 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
#end
camera {
  orthographic
  location <0.0000, 0.0000, -2.0000>
  look_at <0.0000, 0.0000, 2.0000>
  up <0.0000, 3.0000, 0.0000>
  right <5.4494, 0.0000, 0.0000>
}
light_source { 
  <-0.1000, 0.1000, -1.0000> 
  color rgb<1.000, 1.000, 1.000> 
  parallel 
  point_at <0.0, 0.0, 0.0> 
}
light_source { 
  <1.0000, 2.0000, -0.5000> 
  color rgb<1.000, 1.000, 1.000> 
  parallel 
  point_at <0.0, 0.0, 0.0> 
}
background {
  color rgb<1.000, 1.000, 1.000>
}
#default { texture {
 finish { ambient 0.000 diffuse 0.650 phong 0.1 phong_size 40.000 specular 0.500 }
} }
#declare VMD_line_width=0.0020;
// MoleculeID: 2 ReprID: 0 Beginning CPK
// MoleculeID: 2 ReprID: 0 Beginning VDW
VMD_sphere(<-0.8132,-0.8134,0.0006>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-0.8890,-0.3552,0.0783>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<-0.3551,-0.8893,-0.0778>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<-0.6172,-0.0002,-0.0557>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-1.2952,-0.2678,0.2853>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<0.0001,-0.6173,0.0554>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-0.2680,-1.2957,-0.2844>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-0.8890,0.3551,0.0776>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<-1.2952,0.2680,0.2848>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<0.3552,-0.8893,-0.0783>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<0.2678,-1.2957,-0.2848>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-0.8133,0.8131,-0.0009>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<0.8133,-0.8133,-0.0005>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-0.3552,0.8893,-0.0785>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<0.8891,-0.3552,0.0778>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<-0.0001,0.6170,0.0544>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-0.2678,1.2963,-0.2840>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<0.6173,-0.0000,-0.0559>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<1.2951,-0.2680,0.2851>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<0.3552,0.8893,-0.0781>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<0.2680,1.2963,-0.2837>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<0.8890,0.3551,0.0780>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<1.2951,0.2678,0.2852>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<0.8132,0.8132,0.0000>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_cylinder(<-0.813171,-0.813396,0.000606389>,<-0.584148,-0.851356,-0.0385824>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.813171,-0.813396,0.000606389>,<-0.851098,-0.584318,0.0394641>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.889024,-0.355241,0.0783219>,<-1.09213,-0.311525,0.181797>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.889024,-0.355241,0.0783219>,<-0.753115,-0.177718,0.0113086>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.889024,-0.355241,0.0783219>,<-0.851098,-0.584318,0.0394641>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.355125,-0.889316,-0.0777712>,<-0.31155,-1.09252,-0.181107>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.355125,-0.889316,-0.0777712>,<-0.177513,-0.753327,-0.0111978>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.355125,-0.889316,-0.0777712>,<-0.584148,-0.851356,-0.0385824>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.617207,-0.00019433,-0.0557047>,<-0.753115,-0.177718,0.0113086>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.617207,-0.00019433,-0.0557047>,<-0.753124,0.177439,0.0109673>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-1.29525,-0.267808,0.285271>,<-1.09213,-0.311525,0.181797>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-1.29525,-0.267808,0.285271>,<-1.29523,8.93339e-005,0.285033>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<9.94191e-005,-0.617338,0.0553756>,<0.177644,-0.753309,-0.0114388>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<9.94191e-005,-0.617338,0.0553756>,<-0.177513,-0.753327,-0.0111978>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.267976,-1.29573,-0.284442>,<-0.31155,-1.09252,-0.181107>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.267976,-1.29573,-0.284442>,<-7.73498e-005,-1.29573,-0.284601>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.889042,0.355072,0.0776393>,<-1.09213,0.311529,0.181217>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.889042,0.355072,0.0776393>,<-0.753124,0.177439,0.0109673>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.889042,0.355072,0.0776393>,<-0.851169,0.584096,0.0383559>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-1.29522,0.267987,0.284795>,<-1.29523,8.93339e-005,0.285033>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-1.29522,0.267987,0.284795>,<-1.09213,0.311529,0.181217>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.355188,-0.889281,-0.0782532>,<0.311505,-1.09251,-0.181507>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.355188,-0.889281,-0.0782532>,<0.584252,-0.851278,-0.039392>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.355188,-0.889281,-0.0782532>,<0.177644,-0.753309,-0.0114388>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.267821,-1.29574,-0.28476>,<0.311505,-1.09251,-0.181507>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.267821,-1.29574,-0.28476>,<-7.73498e-005,-1.29573,-0.284601>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.813296,0.813119,-0.000927579>,<-0.584235,0.851201,-0.0396912>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.813296,0.813119,-0.000927579>,<-0.851169,0.584096,0.0383559>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.813315,-0.813275,-0.00053093>,<0.85119,-0.584235,0.038643>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.813315,-0.813275,-0.00053093>,<0.584252,-0.851278,-0.039392>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.355174,0.889282,-0.0784547>,<-0.584235,0.851201,-0.0396912>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.355174,0.889282,-0.0784547>,<-0.177616,0.753139,-0.0120186>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.355174,0.889282,-0.0784547>,<-0.311504,1.09277,-0.181234>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.889065,-0.355194,0.077817>,<0.85119,-0.584235,0.038643>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.889065,-0.355194,0.077817>,<1.09211,-0.311572,0.181449>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.889065,-0.355194,0.077817>,<0.753166,-0.177613,0.0109583>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-5.78871e-005,0.616996,0.0544175>,<0.177547,0.753161,-0.0118228>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-5.78871e-005,0.616996,0.0544175>,<-0.177616,0.753139,-0.0120186>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.267834,1.29625,-0.284013>,<6.43395e-005,1.29626,-0.283871>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.267834,1.29625,-0.284013>,<-0.311504,1.09277,-0.181234>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.617267,-3.14978e-005,-0.0559003>,<0.753136,0.177542,0.0110566>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.617267,-3.14978e-005,-0.0559003>,<0.753166,-0.177613,0.0109583>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<1.29515,-0.267951,0.285081>,<1.29514,-5.31557e-005,0.28514>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<1.29515,-0.267951,0.285081>,<1.09211,-0.311572,0.181449>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.355151,0.889326,-0.0780632>,<0.177547,0.753161,-0.0118228>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.355151,0.889326,-0.0780632>,<0.584179,0.851282,-0.0390254>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.355151,0.889326,-0.0780632>,<0.311557,1.09279,-0.180896>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.267963,1.29626,-0.283729>,<6.43395e-005,1.29626,-0.283871>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.267963,1.29626,-0.283729>,<0.311557,1.09279,-0.180896>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.889005,0.355116,0.0780135>,<0.753136,0.177542,0.0110566>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.889005,0.355116,0.0780135>,<1.09207,0.31148,0.181606>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.889005,0.355116,0.0780135>,<0.851106,0.584177,0.0390129>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<1.29514,0.267844,0.285199>,<1.09207,0.31148,0.181606>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<1.29514,0.267844,0.285199>,<1.29514,-5.31557e-005,0.28514>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.813206,0.813238,1.23596e-005>,<0.851106,0.584177,0.0390129>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.813206,0.813238,1.23596e-005>,<0.584179,0.851282,-0.0390254>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
// End of POV-Ray 3.x generation 
