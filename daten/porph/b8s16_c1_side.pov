// 
// Molecular graphics export from VMD 1.9.1
// http://www.ks.uiuc.edu/Research/vmd/
// Requires POV-Ray 3.5 or later
// 
// POV 3.x input script : E:/Users/Kevin Reiter/Documents/GitHub/promotion/daten/porph/b8s16_c1_side.pov 
// try povray +W1920 +H1057 -IE:/Users/Kevin Reiter/Documents/GitHub/promotion/daten/porph/b8s16_c1_side.pov -OE:/Users/Kevin Reiter/Documents/GitHub/promotion/daten/porph/b8s16_c1_side.pov.tga +P +X +A +FT +C
#if (version < 3.5) 
#error "VMD POV3DisplayDevice has been compiled for POV-Ray 3.5 or above.\nPlease upgrade POV-Ray or recompile VMD."
#end 
#declare VMD_clip_on=array[3] {0, 0, 0};
#declare VMD_clip=array[3];
#declare VMD_scaledclip=array[3];
#declare VMD_line_width=0.0020;
#macro VMDC ( C1 )
  texture { pigment { rgbt C1 }}
#end
#macro VMD_point (P1, R1, C1)
  #local T = texture { finish { ambient 1.0 diffuse 0.0 phong 0.0 specular 0.0 } pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_line (P1, P2, C1)
  #local T = texture { finish { ambient 1.0 diffuse 0.0 phong 0.0 specular 0.0 } pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cylinder {P1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cylinder {P1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_sphere (P1, R1, C1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_cylinder (P1, P2, R1, C1, O1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cylinder {P1, P2, R1 #if(O1) open #end texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cylinder {P1, P2, R1 #if(O1) open #end texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_cone (P1, P2, R1, C1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cone {P1, R1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cone {P1, R1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_triangle (P1, P2, P3, N1, N2, N3, C1)
  #local T = texture { pigment { C1 } }
  smooth_triangle {P1, N1, P2, N2, P3, N3 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
#end
#macro VMD_tricolor (P1, P2, P3, N1, N2, N3, C1, C2, C3)
  #local NX = P2-P1;
  #local NY = P3-P1;
  #local NZ = vcross(NX, NY);
  #local T = texture { pigment {
    average pigment_map {
      [1 gradient x color_map {[0 rgb 0] [1 C2*3]}]
      [1 gradient y color_map {[0 rgb 0] [1 C3*3]}]
      [1 gradient z color_map {[0 rgb 0] [1 C1*3]}]
    }
    matrix <1.01,0,1,0,1.01,1,0,0,1,-.002,-.002,-1>
    matrix <NX.x,NX.y,NX.z,NY.x,NY.y,NY.z,NZ.x,NZ.y,NZ.z,P1.x,P1.y,P1.z>
  } }
  smooth_triangle {P1, N1, P2, N2, P3, N3 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
#end
camera {
  orthographic
  location <0.0000, 0.0000, -2.0000>
  look_at <0.0000, 0.0000, 2.0000>
  up <0.0000, 3.0000, 0.0000>
  right <5.4494, 0.0000, 0.0000>
}
light_source { 
  <-0.1000, 0.1000, -1.0000> 
  color rgb<1.000, 1.000, 1.000> 
  parallel 
  point_at <0.0, 0.0, 0.0> 
}
light_source { 
  <1.0000, 2.0000, -0.5000> 
  color rgb<1.000, 1.000, 1.000> 
  parallel 
  point_at <0.0, 0.0, 0.0> 
}
background {
  color rgb<1.000, 1.000, 1.000>
}
#default { texture {
 finish { ambient 0.000 diffuse 0.650 phong 0.1 phong_size 40.000 specular 0.500 }
} }
#declare VMD_line_width=0.0020;
// MoleculeID: 2 ReprID: 0 Beginning CPK
// MoleculeID: 2 ReprID: 0 Beginning VDW
VMD_sphere(<-0.8145,0.0025,-0.8121>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-0.8898,-0.0756,-0.3539>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<-0.3563,0.0797,-0.8887>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<-0.6171,0.0573,0.0009>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-1.2964,-0.2816,-0.2661>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-0.0010,-0.0546,-0.6174>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-0.2693,0.2867,-1.2950>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-0.8887,-0.0758,0.3564>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<-1.2955,-0.2818,0.2697>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<0.3540,0.0784,-0.8898>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<0.2665,0.2856,-1.2958>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-0.8120,0.0021,0.8144>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<0.8120,-0.0006,-0.8146>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-0.3536,0.0783,0.8899>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<0.8883,-0.0797,-0.3567>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<0.0008,-0.0551,0.6169>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<-0.2650,0.2832,1.2970>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<0.6174,0.0543,-0.0010>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<1.2940,-0.2881,-0.2704>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<0.3568,0.0761,0.8888>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<0.2708,0.2815,1.2962>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<0.8894,-0.0807,0.3536>,0.0516,rgbt<0.500,0.300,0.000,0.000>)
VMD_sphere(<1.2948,-0.2889,0.2654>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_sphere(<0.8145,-0.0031,0.8119>,0.0465,rgbt<0.800,0.700,0.100,0.000>)
VMD_cylinder(<-0.814465,0.00246049,-0.812095>,<-0.585402,0.0410999,-0.850375>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.814465,0.00246049,-0.812095>,<-0.852127,-0.0365685,-0.583004>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.889789,-0.0755975,-0.353912>,<-1.0931,-0.178596,-0.309993>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.889789,-0.0755975,-0.353912>,<-0.753424,-0.00914616,-0.176528>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.889789,-0.0755975,-0.353912>,<-0.852127,-0.0365685,-0.583004>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.356339,0.0797392,-0.888655>,<-0.31282,0.183201,-1.09181>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.356339,0.0797392,-0.888655>,<-0.178684,0.0125454,-0.753028>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.356339,0.0797392,-0.888655>,<-0.585402,0.0410999,-0.850375>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.61706,0.0573052,0.000856847>,<-0.753424,-0.00914616,-0.176528>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.61706,0.0573052,0.000856847>,<-0.752866,-0.00922318,0.178628>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-1.29641,-0.281595,-0.266073>,<-1.0931,-0.178596,-0.309993>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-1.29641,-0.281595,-0.266073>,<-1.29596,-0.281673,0.00182345>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.0010284,-0.0546484,-0.617401>,<0.176472,0.0118654,-0.753577>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.0010284,-0.0546484,-0.617401>,<-0.178684,0.0125454,-0.753028>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.269302,0.286662,-1.29496>,<-0.31282,0.183201,-1.09181>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.269302,0.286662,-1.29496>,<-0.00140432,0.286126,-1.2954>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.888673,-0.0757516,0.3564>,<-1.0921,-0.178751,0.31306>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.888673,-0.0757516,0.3564>,<-0.752866,-0.00922318,0.178628>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.888673,-0.0757516,0.3564>,<-0.850333,-0.0368363,0.585408>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-1.29552,-0.28175,0.26972>,<-1.29596,-0.281673,0.00182345>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-1.29552,-0.28175,0.26972>,<-1.0921,-0.178751,0.31306>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.353972,0.0783791,-0.889753>,<0.310233,0.181985,-1.09279>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.353972,0.0783791,-0.889753>,<0.582994,0.0388794,-0.852162>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.353972,0.0783791,-0.889753>,<0.176472,0.0118654,-0.753577>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.266493,0.285591,-1.29583>,<0.310233,0.181985,-1.09279>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.266493,0.285591,-1.29583>,<-0.00140432,0.286126,-1.2954>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.811994,0.00207891,0.814417>,<-0.582772,0.0402034,0.852178>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.811994,0.00207891,0.814417>,<-0.850333,-0.0368363,0.585408>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.812016,-0.000620275,-0.814571>,<0.850154,-0.040162,-0.585638>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.812016,-0.000620275,-0.814571>,<0.582994,0.0388794,-0.852162>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.353551,0.0783279,0.889939>,<-0.582772,0.0402034,0.852178>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.353551,0.0783279,0.889939>,<-0.176383,0.011592,0.753435>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<-0.353551,0.0783279,0.889939>,<-0.30929,0.180754,1.09347>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.888292,-0.0797038,-0.356705>,<0.850154,-0.040162,-0.585638>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.888292,-0.0797038,-0.356705>,<1.09113,-0.183913,-0.313529>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.888292,-0.0797038,-0.356705>,<0.75285,-0.0127022,-0.178828>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.000784457,-0.0551438,0.61693>,<0.178777,0.0104752,0.752889>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.000784457,-0.0551438,0.61693>,<-0.176383,0.011592,0.753435>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.265029,0.283179,1.29701>,<0.00286742,0.282342,1.29659>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<-0.265029,0.283179,1.29701>,<-0.30929,0.180754,1.09347>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.617409,0.0542993,-0.000951761>,<0.753387,-0.0132188,0.176326>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.617409,0.0542993,-0.000951761>,<0.75285,-0.0127022,-0.178828>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<1.29397,-0.288123,-0.270353>,<1.2944,-0.288497,-0.00245644>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<1.29397,-0.288123,-0.270353>,<1.09113,-0.183913,-0.313529>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.35677,0.0760942,0.888847>,<0.178777,0.0104752,0.752889>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.35677,0.0760942,0.888847>,<0.585634,0.0365075,0.850392>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.35677,0.0760942,0.888847>,<0.313767,0.1788,1.0925>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.270764,0.281505,1.29616>,<0.00286742,0.282342,1.29659>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.270764,0.281505,1.29616>,<0.313767,0.1788,1.0925>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.889365,-0.0807368,0.353604>,<0.753387,-0.0132188,0.176326>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.889365,-0.0807368,0.353604>,<1.09209,-0.184804,0.309522>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<0.889365,-0.0807368,0.353604>,<0.851932,-0.041908,0.58277>0.0129,rgbt<0.500,0.300,0.000,0.000>,1)
VMD_cylinder(<1.29482,-0.288872,0.26544>,<1.09209,-0.184804,0.309522>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<1.29482,-0.288872,0.26544>,<1.2944,-0.288497,-0.00245644>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.814499,-0.00307915,0.811937>,<0.851932,-0.041908,0.58277>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
VMD_cylinder(<0.814499,-0.00307915,0.811937>,<0.585634,0.0365075,0.850392>0.0129,rgbt<0.800,0.700,0.100,0.000>,1)
// End of POV-Ray 3.x generation 
