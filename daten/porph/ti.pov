// 
// Molecular graphics export from VMD 1.9.1
// http://www.ks.uiuc.edu/Research/vmd/
// Requires POV-Ray 3.5 or later
// 
// POV 3.x input script : E:/Users/Kevin Reiter/Documents/GitHub/promotion/daten/porph/ti.pov 
// try povray +W1920 +H1057 -IE:/Users/Kevin Reiter/Documents/GitHub/promotion/daten/porph/ti.pov -OE:/Users/Kevin Reiter/Documents/GitHub/promotion/daten/porph/ti.pov.tga +P +X +A +FT +C
#if (version < 3.5) 
#error "VMD POV3DisplayDevice has been compiled for POV-Ray 3.5 or above.\nPlease upgrade POV-Ray or recompile VMD."
#end 
#declare VMD_clip_on=array[3] {0, 0, 0};
#declare VMD_clip=array[3];
#declare VMD_scaledclip=array[3];
#declare VMD_line_width=0.0020;
#macro VMDC ( C1 )
  texture { pigment { rgbt C1 }}
#end
#macro VMD_point (P1, R1, C1)
  #local T = texture { finish { ambient 1.0 diffuse 0.0 phong 0.0 specular 0.0 } pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_line (P1, P2, C1)
  #local T = texture { finish { ambient 1.0 diffuse 0.0 phong 0.0 specular 0.0 } pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cylinder {P1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cylinder {P1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_sphere (P1, R1, C1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_cylinder (P1, P2, R1, C1, O1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cylinder {P1, P2, R1 #if(O1) open #end texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cylinder {P1, P2, R1 #if(O1) open #end texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_cone (P1, P2, R1, C1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cone {P1, R1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cone {P1, R1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_triangle (P1, P2, P3, N1, N2, N3, C1)
  #local T = texture { pigment { C1 } }
  smooth_triangle {P1, N1, P2, N2, P3, N3 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
#end
#macro VMD_tricolor (P1, P2, P3, N1, N2, N3, C1, C2, C3)
  #local NX = P2-P1;
  #local NY = P3-P1;
  #local NZ = vcross(NX, NY);
  #local T = texture { pigment {
    average pigment_map {
      [1 gradient x color_map {[0 rgb 0] [1 C2*3]}]
      [1 gradient y color_map {[0 rgb 0] [1 C3*3]}]
      [1 gradient z color_map {[0 rgb 0] [1 C1*3]}]
    }
    matrix <1.01,0,1,0,1.01,1,0,0,1,-.002,-.002,-1>
    matrix <NX.x,NX.y,NX.z,NY.x,NY.y,NY.z,NZ.x,NZ.y,NZ.z,P1.x,P1.y,P1.z>
  } }
  smooth_triangle {P1, N1, P2, N2, P3, N3 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
#end
camera {
  orthographic
  location <0.0000, 0.0000, -2.0000>
  look_at <0.0000, 0.0000, 2.0000>
  up <0.0000, 3.0000, 0.0000>
  right <5.4494, 0.0000, 0.0000>
}
light_source { 
  <-0.1000, 0.1000, -1.0000> 
  color rgb<1.000, 1.000, 1.000> 
  parallel 
  point_at <0.0, 0.0, 0.0> 
}
light_source { 
  <1.0000, 2.0000, -0.5000> 
  color rgb<1.000, 1.000, 1.000> 
  parallel 
  point_at <0.0, 0.0, 0.0> 
}
background {
  color rgb<1.000, 1.000, 1.000>
}
#default { texture {
 finish { ambient 0.000 diffuse 0.650 phong 0.1 phong_size 40.000 specular 0.500 }
} }
#declare VMD_line_width=0.0020;
// MoleculeID: 2 ReprID: 0 Beginning CPK
// MoleculeID: 2 ReprID: 0 Beginning VDW
VMD_sphere(<0.3159,-0.7519,0.0246>,0.0381,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<0.1120,-1.1101,0.5803>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<0.8581,-1.0865,-0.2512>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-0.0640,-0.4380,-0.4709>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-0.5092,-0.9272,0.6009>,0.0381,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<0.7031,-1.0641,-0.9102>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<0.7318,-0.4078,-0.8863>,0.0381,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<-1.1616,-0.8458,0.5964>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-0.4844,-0.0459,0.4227>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-1.1702,-0.7965,-0.0787>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-0.7541,-0.2517,-0.1868>,0.0381,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<-0.9764,0.0713,-0.7550>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<0.8797,0.2225,-0.8563>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-0.8465,0.6745,-0.5563>,0.0381,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<0.7216,0.3307,-0.1924>,0.0381,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<-0.8084,1.2903,-0.3296>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<0.0076,0.5873,-0.2727>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<1.1367,0.8325,0.0463>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<0.5461,-0.0988,0.3309>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-0.8504,1.0738,0.3097>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-0.2789,0.6841,0.3578>,0.0381,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<1.2614,0.6169,0.6753>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<0.6223,0.6519,0.8252>,0.0381,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<0.0072,0.7880,0.9778>,0.0507,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<0.0006,0.0008,-0.0014>,0.0492,rgbt<0.000,0.900,0.700,0.000>)
VMD_cylinder(<0.315853,-0.751885,0.0245783>,<0.125923,-0.594947,-0.223179>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.315853,-0.751885,0.0245783>,<0.430971,-0.425356,0.177725>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.315853,-0.751885,0.0245783>,<0.213933,-0.93101,0.302438>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.315853,-0.751885,0.0245783>,<0.586997,-0.91919,-0.113314>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.112014,-1.11014,0.580298>,<-0.198616,-1.01869,0.590589>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.112014,-1.11014,0.580298>,<0.213933,-0.93101,0.302438>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.858141,-1.0865,-0.251206>,<0.586997,-0.91919,-0.113314>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.858141,-1.0865,-0.251206>,<0.780642,-1.07529,-0.580679>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.064007,-0.43801,-0.470936>,<-0.0317115,-0.218624,-0.236172>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.064007,-0.43801,-0.470936>,<-0.40903,-0.344871,-0.328846>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.064007,-0.43801,-0.470936>,<0.125923,-0.594947,-0.223179>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.509246,-0.927249,0.600881>,<-0.198616,-1.01869,0.590589>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.509246,-0.927249,0.600881>,<-0.835435,-0.886519,0.598628>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.703144,-1.06408,-0.910151>,<0.717488,-0.735951,-0.898227>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.703144,-1.06408,-0.910151>,<0.780642,-1.07529,-0.580679>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.731833,-0.407825,-0.886302>,<0.80575,-0.0926587,-0.871283>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.731833,-0.407825,-0.886302>,<0.717488,-0.735951,-0.898227>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-1.16162,-0.845789,0.596375>,<-0.835435,-0.886519,0.598628>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-1.16162,-0.845789,0.596375>,<-1.1659,-0.821128,0.258855>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.484355,-0.0459349,0.422749>,<-0.241885,-0.0225869,0.21067>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.484355,-0.0459349,0.422749>,<-0.381645,0.319086,0.390251>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.484355,-0.0459349,0.422749>,<-0.619204,-0.148834,0.117997>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-1.17018,-0.796468,-0.0786646>,<-0.962115,-0.524101,-0.13271>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-1.17018,-0.796468,-0.0786646>,<-1.1659,-0.821128,0.258855>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.754053,-0.251733,-0.186755>,<-0.619204,-0.148834,0.117997>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.754053,-0.251733,-0.186755>,<-0.86522,-0.0902301,-0.470877>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.754053,-0.251733,-0.186755>,<-0.40903,-0.344871,-0.328846>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.754053,-0.251733,-0.186755>,<-0.962115,-0.524101,-0.13271>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.976387,0.0712726,-0.755>,<-0.911466,0.372905,-0.65565>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.976387,0.0712726,-0.755>,<-0.86522,-0.0902301,-0.470877>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.879668,0.222507,-0.856265>,<0.80575,-0.0926587,-0.871283>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.879668,0.222507,-0.856265>,<0.800628,0.276622,-0.524348>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.846546,0.674537,-0.5563>,<-0.827472,0.9824,-0.44293>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.846546,0.674537,-0.5563>,<-0.911466,0.372905,-0.65565>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.721589,0.330736,-0.192432>,<0.800628,0.276622,-0.524348>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.721589,0.330736,-0.192432>,<0.633839,0.115954,0.0692197>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.721589,0.330736,-0.192432>,<0.364615,0.459,-0.232563>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.721589,0.330736,-0.192432>,<0.929168,0.581596,-0.0730868>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.808398,1.29026,-0.329561>,<-0.827472,0.9824,-0.44293>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.808398,1.29026,-0.329561>,<-0.829413,1.18201,-0.00993025>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.00764225,0.587264,-0.272694>,<0.00411318,0.294012,-0.137051>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.00764225,0.587264,-0.272694>,<-0.135647,0.635685,0.0425302>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.00764225,0.587264,-0.272694>,<0.364615,0.459,-0.232563>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<1.13675,0.832456,0.046258>,<0.929168,0.581596,-0.0730868>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<1.13675,0.832456,0.046258>,<1.19906,0.724668,0.360758>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.546089,-0.0988269,0.330871>,<0.273336,-0.0490329,0.164731>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.546089,-0.0988269,0.330871>,<0.430971,-0.425356,0.177725>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.546089,-0.0988269,0.330871>,<0.633839,0.115954,0.0692197>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.850429,1.07376,0.3097>,<-0.564682,0.878931,0.333727>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.850429,1.07376,0.3097>,<-0.829413,1.18201,-0.00993025>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.278935,0.684106,0.357754>,<-0.135647,0.635685,0.0425302>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.278935,0.684106,0.357754>,<-0.381645,0.319086,0.390251>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.278935,0.684106,0.357754>,<-0.564682,0.878931,0.333727>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.278935,0.684106,0.357754>,<-0.135856,0.736053,0.667754>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<1.26137,0.61688,0.675258>,<0.941815,0.634384,0.750227>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<1.26137,0.61688,0.675258>,<1.19906,0.724668,0.360758>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.622256,0.651889,0.825197>,<0.31474,0.719944,0.901476>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.622256,0.651889,0.825197>,<0.941815,0.634384,0.750227>0.0123,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.00722301,0.788,0.977754>,<0.31474,0.719944,0.901476>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.00722301,0.788,0.977754>,<-0.135856,0.736053,0.667754>0.0123,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.000584105,0.000761031,-0.0014081>,<0.00411318,0.294012,-0.137051>0.0123,rgbt<0.000,0.900,0.700,0.000>,1)
VMD_cylinder(<0.000584105,0.000761031,-0.0014081>,<-0.241885,-0.0225869,0.21067>0.0123,rgbt<0.000,0.900,0.700,0.000>,1)
VMD_cylinder(<0.000584105,0.000761031,-0.0014081>,<-0.0317115,-0.218624,-0.236172>0.0123,rgbt<0.000,0.900,0.700,0.000>,1)
VMD_cylinder(<0.000584105,0.000761031,-0.0014081>,<0.273336,-0.0490329,0.164731>0.0123,rgbt<0.000,0.900,0.700,0.000>,1)
// End of POV-Ray 3.x generation 
