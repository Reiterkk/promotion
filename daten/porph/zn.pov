// 
// Molecular graphics export from VMD 1.9.1
// http://www.ks.uiuc.edu/Research/vmd/
// Requires POV-Ray 3.5 or later
// 
// POV 3.x input script : E:/Users/Kevin Reiter/Documents/GitHub/promotion/daten/porph/zn.pov 
// try povray +W1920 +H1057 -IE:/Users/Kevin Reiter/Documents/GitHub/promotion/daten/porph/zn.pov -OE:/Users/Kevin Reiter/Documents/GitHub/promotion/daten/porph/zn.pov.tga +P +X +A +FT +C
#if (version < 3.5) 
#error "VMD POV3DisplayDevice has been compiled for POV-Ray 3.5 or above.\nPlease upgrade POV-Ray or recompile VMD."
#end 
#declare VMD_clip_on=array[3] {0, 0, 0};
#declare VMD_clip=array[3];
#declare VMD_scaledclip=array[3];
#declare VMD_line_width=0.0020;
#macro VMDC ( C1 )
  texture { pigment { rgbt C1 }}
#end
#macro VMD_point (P1, R1, C1)
  #local T = texture { finish { ambient 1.0 diffuse 0.0 phong 0.0 specular 0.0 } pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_line (P1, P2, C1)
  #local T = texture { finish { ambient 1.0 diffuse 0.0 phong 0.0 specular 0.0 } pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cylinder {P1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cylinder {P1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_sphere (P1, R1, C1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  sphere {P1, R1 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_cylinder (P1, P2, R1, C1, O1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cylinder {P1, P2, R1 #if(O1) open #end texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cylinder {P1, P2, R1 #if(O1) open #end texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_cone (P1, P2, R1, C1)
  #local T = texture { pigment { C1 } }
  #if(VMD_clip_on[2])
  intersection {
    cone {P1, R1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
    VMD_clip[2]
  }
  #else
  cone {P1, R1, P2, VMD_line_width texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
  #end
#end
#macro VMD_triangle (P1, P2, P3, N1, N2, N3, C1)
  #local T = texture { pigment { C1 } }
  smooth_triangle {P1, N1, P2, N2, P3, N3 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
#end
#macro VMD_tricolor (P1, P2, P3, N1, N2, N3, C1, C2, C3)
  #local NX = P2-P1;
  #local NY = P3-P1;
  #local NZ = vcross(NX, NY);
  #local T = texture { pigment {
    average pigment_map {
      [1 gradient x color_map {[0 rgb 0] [1 C2*3]}]
      [1 gradient y color_map {[0 rgb 0] [1 C3*3]}]
      [1 gradient z color_map {[0 rgb 0] [1 C1*3]}]
    }
    matrix <1.01,0,1,0,1.01,1,0,0,1,-.002,-.002,-1>
    matrix <NX.x,NX.y,NX.z,NY.x,NY.y,NY.z,NZ.x,NZ.y,NZ.z,P1.x,P1.y,P1.z>
  } }
  smooth_triangle {P1, N1, P2, N2, P3, N3 texture {T} #if(VMD_clip_on[1]) clipped_by {VMD_clip[1]} #end no_shadow}
#end
camera {
  orthographic
  location <0.0000, 0.0000, -2.0000>
  look_at <0.0000, 0.0000, 2.0000>
  up <0.0000, 3.0000, 0.0000>
  right <5.4494, 0.0000, 0.0000>
}
light_source { 
  <-0.1000, 0.1000, -1.0000> 
  color rgb<1.000, 1.000, 1.000> 
  parallel 
  point_at <0.0, 0.0, 0.0> 
}
light_source { 
  <1.0000, 2.0000, -0.5000> 
  color rgb<1.000, 1.000, 1.000> 
  parallel 
  point_at <0.0, 0.0, 0.0> 
}
background {
  color rgb<1.000, 1.000, 1.000>
}
#default { texture {
 finish { ambient 0.000 diffuse 0.650 phong 0.1 phong_size 40.000 specular 0.500 }
} }
#declare VMD_line_width=0.0020;
// MoleculeID: 3 ReprID: 0 Beginning CPK
// MoleculeID: 3 ReprID: 0 Beginning VDW
VMD_sphere(<0.9048,0.1352,0.1629>,0.0324,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<1.0685,0.6397,-0.0599>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<1.0702,-0.0513,0.6886>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<0.5999,-0.2377,-0.1584>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<0.6016,0.7165,-0.3739>,0.0324,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<0.7900,-0.5526,0.7551>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<0.5125,-0.6398,0.2502>,0.0324,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<0.4987,1.2218,-0.6791>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<0.0669,0.4618,-0.4154>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<0.2129,1.3892,-0.2055>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-0.0091,0.8710,-0.0087>,0.0324,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<-0.2295,0.9003,0.5154>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<0.2056,-1.1137,0.1474>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-0.3191,0.3452,0.5934>,0.0324,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<-0.0931,-0.9012,-0.2907>,0.0324,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<-0.6885,0.1592,1.0301>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-0.2131,-0.1499,0.2979>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-0.4990,-1.2879,-0.4926>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-0.1043,-0.4025,-0.5837>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-1.0883,0.1263,0.6141>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-0.7674,-0.0565,0.1468>,0.0324,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<-0.8223,-0.9676,-0.8477>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<-0.6902,-0.4526,-0.5811>,0.0324,rgbt<0.600,0.600,0.600,0.000>)
VMD_sphere(<-1.0747,-0.1092,-0.3327>,0.0431,rgbt<0.700,0.350,0.000,0.000>)
VMD_sphere(<0.0669,-0.0437,-0.1725>,0.0291,rgbt<0.700,0.400,1.000,0.000>)
VMD_cylinder(<0.90484,0.135212,0.162859>,<0.752387,-0.05122,0.00222886>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.90484,0.135212,0.162859>,<0.987539,0.0419731,0.425707>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.90484,0.135212,0.162859>,<0.986677,0.387431,0.0514944>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<1.06852,0.63965,-0.0598703>,<0.986677,0.387431,0.0514944>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<1.06852,0.63965,-0.0598703>,<0.835033,0.678097,-0.21688>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<1.07024,-0.0512661,0.688555>,<0.987539,0.0419731,0.425707>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<1.07024,-0.0512661,0.688555>,<0.930139,-0.30191,0.721827>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.599934,-0.237652,-0.158401>,<0.333402,-0.140669,-0.16543>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.599934,-0.237652,-0.158401>,<0.752387,-0.05122,0.00222886>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.599934,-0.237652,-0.158401>,<0.556222,-0.438716,0.0458909>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.601551,0.716544,-0.37389>,<0.835033,0.678097,-0.21688>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.601551,0.716544,-0.37389>,<0.334213,0.589159,-0.394629>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.601551,0.716544,-0.37389>,<0.550141,0.96917,-0.526477>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.790039,-0.552554,0.755099>,<0.930139,-0.30191,0.721827>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.790039,-0.552554,0.755099>,<0.651275,-0.596167,0.502641>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.51251,-0.639779,0.250183>,<0.651275,-0.596167,0.502641>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.51251,-0.639779,0.250183>,<0.556222,-0.438716,0.0458909>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.51251,-0.639779,0.250183>,<0.359074,-0.876733,0.19877>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<0.498731,1.2218,-0.679064>,<0.550141,0.96917,-0.526477>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.498731,1.2218,-0.679064>,<0.355804,1.30548,-0.442274>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.0668746,0.461774,-0.415369>,<0.066872,0.209044,-0.293914>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.0668746,0.461774,-0.415369>,<0.334213,0.589159,-0.394629>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.0668746,0.461774,-0.415369>,<0.0288851,0.666393,-0.212031>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.212877,1.38917,-0.205484>,<0.355804,1.30548,-0.442274>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.212877,1.38917,-0.205484>,<0.101887,1.13009,-0.107089>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.00910426,0.871012,-0.00869334>,<0.101887,1.13009,-0.107089>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.00910426,0.871012,-0.00869334>,<0.0288851,0.666393,-0.212031>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.00910426,0.871012,-0.00869334>,<-0.119285,0.885636,0.253338>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.229465,0.90026,0.515369>,<-0.119285,0.885636,0.253338>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.229465,0.90026,0.515369>,<-0.274307,0.622746,0.554361>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.205637,-1.11369,0.147356>,<0.0562512,-1.00746,-0.0716514>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.205637,-1.11369,0.147356>,<0.359074,-0.876733,0.19877>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.319149,0.345233,0.593353>,<-0.274307,0.622746,0.554361>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.319149,0.345233,0.593353>,<-0.266131,0.0976431,0.445614>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.319149,0.345233,0.593353>,<-0.503826,0.252214,0.811703>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.0931351,-0.901225,-0.290659>,<-0.0987258,-0.65185,-0.437193>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.0931351,-0.901225,-0.290659>,<-0.29606,-1.09457,-0.391622>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.0931351,-0.901225,-0.290659>,<0.0562512,-1.00746,-0.0716514>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.688503,0.159196,1.03005>,<-0.888382,0.142727,0.822094>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.688503,0.159196,1.03005>,<-0.503826,0.252214,0.811703>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.213112,-0.149946,0.297875>,<-0.0731215,-0.0968166,0.0627081>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.213112,-0.149946,0.297875>,<-0.266131,0.0976431,0.445614>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.213112,-0.149946,0.297875>,<-0.490252,-0.10322,0.222355>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.498985,-1.28792,-0.492585>,<-0.660661,-1.12778,-0.670138>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.498985,-1.28792,-0.492585>,<-0.29606,-1.09457,-0.391622>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.104316,-0.402475,-0.583728>,<-0.0187235,-0.223081,-0.378093>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.104316,-0.402475,-0.583728>,<-0.0987258,-0.65185,-0.437193>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.104316,-0.402475,-0.583728>,<-0.397248,-0.427529,-0.582399>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-1.08826,0.126258,0.614136>,<-0.927826,0.0348826,0.380485>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-1.08826,0.126258,0.614136>,<-0.888382,0.142727,0.822094>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.767392,-0.0564932,0.146834>,<-0.490252,-0.10322,0.222355>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.767392,-0.0564932,0.146834>,<-0.927826,0.0348826,0.380485>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.767392,-0.0564932,0.146834>,<-0.921035,-0.0828428,-0.0929371>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.822336,-0.967639,-0.84769>,<-0.756258,-0.710111,-0.714381>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.822336,-0.967639,-0.84769>,<-0.660661,-1.12778,-0.670138>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-0.690179,-0.452583,-0.581071>,<-0.882429,-0.280887,-0.45689>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.690179,-0.452583,-0.581071>,<-0.397248,-0.427529,-0.582399>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-0.690179,-0.452583,-0.581071>,<-0.756258,-0.710111,-0.714381>0.0105,rgbt<0.600,0.600,0.600,0.000>,1)
VMD_cylinder(<-1.07468,-0.109192,-0.332708>,<-0.921035,-0.0828428,-0.0929371>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<-1.07468,-0.109192,-0.332708>,<-0.882429,-0.280887,-0.45689>0.0105,rgbt<0.700,0.350,0.000,0.000>,1)
VMD_cylinder(<0.0668695,-0.0436868,-0.172459>,<0.333402,-0.140669,-0.16543>0.0105,rgbt<0.700,0.400,1.000,0.000>,1)
VMD_cylinder(<0.0668695,-0.0436868,-0.172459>,<0.066872,0.209044,-0.293914>0.0105,rgbt<0.700,0.400,1.000,0.000>,1)
VMD_cylinder(<0.0668695,-0.0436868,-0.172459>,<-0.0731215,-0.0968166,0.0627081>0.0105,rgbt<0.700,0.400,1.000,0.000>,1)
VMD_cylinder(<0.0668695,-0.0436868,-0.172459>,<-0.0187235,-0.223081,-0.378093>0.0105,rgbt<0.700,0.400,1.000,0.000>,1)
// End of POV-Ray 3.x generation 
